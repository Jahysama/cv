name: CI/CD with Docker Hub and GCP

on:
  push:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: europe-west4
  GCP_ZONE: europe-west4-a

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/website:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/website:latest

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Update the container in the instance group
      - name: Update container in instance group
        run: |
          gcloud compute instance-groups managed rolling-action replace website-instance-group \
            --zone=$GCP_ZONE \
            --max-unavailable=0 \
            --max-surge=1 \
            --replacement-method=substitute

      # Wait for the update to complete
      - name: Wait for update to complete
        run: |
          gcloud compute instance-groups managed wait-until-stable website-instance-group \
            --zone=$GCP_ZONE \
            --timeout=600s

      # Invalidate the load balancer cache
      - name: Invalidate load balancer cache
        run: |
          gcloud compute url-maps invalidate-cdn-cache website-url-map \
            --path="/*"
