name: CI/CD with Docker Hub and GCP

on:
  push:
    branches: [main]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_ZONE: europe-west4-a
  INSTANCE_NAME: website-instance # Replace with your actual instance name

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/website:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/website:latest

      - name: Update container on the instance
        run: |
          echo "Updating container for instance: ${{ env.INSTANCE_NAME }}"

          gcloud compute instances update-container ${{ env.INSTANCE_NAME }} \
            --zone=${{ env.GCP_ZONE }} \
            --container-image=${{ secrets.DOCKERHUB_USERNAME }}/website:${{ github.sha }}

          echo "Container updated for instance ${{ env.INSTANCE_NAME }}"

      - name: Verify container update
        run: |
          echo "Verifying container for instance: ${{ env.INSTANCE_NAME }}"
          CONTAINER_IMAGE=$(gcloud compute instances describe ${{ env.INSTANCE_NAME }} --zone=${{ env.GCP_ZONE }} --format="value(metadata.items.where(key='gce-container-declaration').value.spec.containers[0].image)")
          if [[ "$CONTAINER_IMAGE" != "${{ secrets.DOCKERHUB_USERNAME }}/website:${{ github.sha }}" ]]; then
            echo "Container image for ${{ env.INSTANCE_NAME }} is not updated. Current image: $CONTAINER_IMAGE"
            exit 1
          fi
          echo "Container verified for instance ${{ env.INSTANCE_NAME }}"
          echo "Update completed successfully"
